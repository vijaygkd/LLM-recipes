# Config for running the InferenceRecipe in generate.py to generate output from an LLM
#
# To launch, run the following command from root torchtune directory:
#    tune run generate --config generation

# Model arguments
model:
  _component_: torchtune.models.llama3_1.llama3_1_8b

# Base model
# checkpointer:
#   _component_: torchtune.utils.FullModelHFCheckpointer
#   checkpoint_dir: ../tmp/Meta-Llama-3.1-8B-Instruct/
#   checkpoint_files: [
#     model-00001-of-00004.safetensors,
#     model-00002-of-00004.safetensors,
#     model-00003-of-00004.safetensors,
#     model-00004-of-00004.safetensors
#   ]
#   output_dir: ../tmp/Meta-Llama-3.1-8B-Instruct/generate
#   model_type: LLAMA3

# Fine-tuned model
checkpointer:
  _component_: torchtune.utils.FullModelHFCheckpointer
  checkpoint_dir: ../tmp/meta_llama3.1_8B_ft_qlora
  checkpoint_files: [
    hf_model_0001_0.pt,
    hf_model_0002_0.pt,
    hf_model_0003_0.pt,
    hf_model_0004_0.pt
  ]
  output_dir: ../tmp/meta_llama3.1_8B_ft_qlora/generate
  model_type: LLAMA3


device: cuda
dtype: bf16

seed: 1234

# Tokenizer arguments
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: ../tmp/Meta-Llama-3.1-8B-Instruct/original/tokenizer.model

# Generation arguments; defaults taken from gpt-fast
prompt: "Tell me a joke?"
instruct_template: null
chat_format: null
max_new_tokens: 500
temperature: 0.8 # 0.8 and 0.6 are popular values to try
top_k: 300
# It is recommended to set enable_kv_cache=False for long-context models like Llama3.1
enable_kv_cache: False

quantizer: null
